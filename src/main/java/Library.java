/*
 * This Java source file was generated by the Gradle 'init' task.
 */
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
import org.antlr.v4.runtime.tree.TerminalNode;

import java.io.File;

import javax.xml.parsers.*;

public class Library {
    public static void main(String[] args) {
        Library lib = new Library();
    	try {
    		File inputFile = new File("input_caesar.xml");
            DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance();
            dbFactory.setIgnoringElementContentWhitespace(true);
            DocumentBuilder dBuilder = dbFactory.newDocumentBuilder();
            Document doc = dBuilder.parse(inputFile);
            Element root = doc.getDocumentElement();
            root.normalize();

            System.out.println("Root element: " + root.getNodeName());
            NodeList rootChild = root.getChildNodes();
            for(int i=0; i<rootChild.getLength(); i++) {
                if (rootChild.item(i).getNodeType() == Node.ELEMENT_NODE) {
                    System.out.println(rootChild.item(i).getNodeName());
                    lib.dig_element(rootChild.item(i).getChildNodes());
                }
            }
    	} catch (Exception e) {
    		e.printStackTrace();
    	}
    }

    private void dig_element(NodeList element_node) {
        for (int i = 0; i < element_node.getLength(); i++) {
            if (element_node.item(i).getNodeType() == Node.ELEMENT_NODE) {
                System.out.println(element_node.item(i).getNodeName());
                dig_element(element_node.item(i).getChildNodes());
            } else if (element_node.item(i).getNodeType() == Node.TEXT_NODE) {
                System.out.println(element_node.item(i).getNodeValue());
            }
        }
    }
}
